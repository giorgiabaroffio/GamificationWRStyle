<?xml version="1.0" encoding="UTF-8"?>

<Descriptor service="com.webratio.units.content.rtx.db.IndexUnitService" name="Latest Badge">
  <MaxResults>8</MaxResults>
  <Query entity="ent5x">
    <Input id="p0" param="acond17q" type="boolean" implied="false" expandStyle="in" value="false" attribute="att99x"/>
    <Input id="p1" param="acond18q" type="boolean" implied="false" expandStyle="in" value="true" attribute="att12p"/>
    <Output id="att21x" name="oid" index="0"/>
    <Output id="role5x$att113p" name="badgeAcquiredToUserHeadQuarter_firstName" index="1" useId="true"/>
    <Output id="role11x$att48x" name="badgeAcquiredToGamificationDictionary_title" index="2" useId="true"/>
    <Output id="role11x$att43x" name="badgeAcquiredToGamificationDictionary_level" index="3" useId="true"/>
    <Output id="role5x$att114p" name="badgeAcquiredToUserHeadQuarter_lastName" index="4" useId="true"/>
    <Output id="role11x$att117x" name="badgeAcquiredToGamificationDictionary_area" index="5" useId="true"/>
    <Output id="role5x_userOID" name="badgeAcquiredToUserHeadQuarter_OID" index="6" useId="true"/>
    <Output id="role11x$att47x" name="badgeAcquiredToGamificationDictionary_checkedImage" blob="true" index="7" namePrefix="badgeAcquiredToGamificationDictionary_" useId="true"/>
    <Output id="role11x$att42x" name="badgeAcquiredToGamificationDictionary_oid" index="8" useId="true"/>
    <HQL>select a_badgeInstance.oid, a_communityUser_role5x.firstName, a_badgeType_role11x.title, a_badgeType_role11x.level, a_communityUser_role5x.lastName, a_badgeType_role11x.area, a_badgeInstance.badgeAcquiredToUserHeadQuarter.OID, a_badgeType_role11x.checkedImageRef, a_badgeType_role11x.oid from BadgeInstance a_badgeInstance left join a_badgeInstance.badgeAcquiredToGamificationDictionary a_badgeType_role11x left join a_badgeInstance.badgeAcquiredToUserHeadQuarter a_communityUser_role5x
      <Where defaultPolicy="fill" allImplied="false">([(a_badgeInstance.oid in( select a_badgeInstance_2.oid from BadgeInstance a_badgeInstance_2 inner join a_badgeInstance_2.badgeAcquiredToUserHeadQuarter s_communityUser_role5x where ({[p0]s_communityUser_role5x.internal in(?)})))]) and ([(a_badgeInstance.oid in( select a_badgeInstance_2.oid from BadgeInstance a_badgeInstance_2 inner join a_badgeInstance_2.badgeAcquiredToUserHeadQuarter s_communityUser_role5x where ({[p1]s_communityUser_role5x.publicProfile in(?)})))])</Where>order by a_badgeInstance.date desc, a_badgeType_role11x.level desc
    </HQL>
  </Query>
</Descriptor>
